@model Bicimad.Web.Models.Home.BikeStatsModel
@{
    ViewBag.Title = "Home";
}

<br/>

<div class="col-md-2 center-block" style="margin-top: 5em">
    <div class="card default-color darken-1 z-depth-3">
        <div class="card-content white-text">
            <span class="card-title">Estadística</span>
            @if (Model != null)
            {
                <p>Bicis libres: @Model.FreeBikes </p>
                <p>Bicis en uso: @Model.ActiveBikes</p>
                <p>Bicis averiadas:@Model.BrokenBikes </p>
            }

        </div>
    </div>

    <div class="panel text-center">
        <a class="btn btn-primary btn-block waves-effect blue">Coger Bicicleta</a>
        <a class="btn btn-primary btn-block waves-effect default-color">Reservar Bicicleta</a>
        <a class="btn btn-primary btn-block waves-effect default-color">Reservar Anclaje</a>
        <a class="btn btn-primary btn-block waves-effect blue">Dejar Bicicleta</a>
    </div>
</div>

<div class="card default-color darken-1 col-md-10">
    <div class="card-content">
        <span class="card-title">Estado de las estaciones</span>
        <div id="map" style="height: 550px;
                                      max-height: 50%;">
        </div>
    </div>
</div>


@section scripts
{
    @* TODO: CUANDO EL SCRIPT ESTE ACABADO METERLO EN UN SCRIPT APARTE y add locate *@
    <script>
        $(function() {


            var map = L.map('map').setView([40.420829, -3.704729], 14);

            var token = 'pk.eyJ1IjoianVsaW9qbGdvbiIsImEiOiJjaWwycG13eDcwMGNmd25tMHljZnZocWg4In0.xCFNgIP46ccbU5bQ7cvyPg';
            L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=' + token, {
                maxZoom: 18,
                attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, ' +
                    '<a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
                    'Imagery © <a href="http://mapbox.com">Mapbox</a>',
                id: 'juliojlgon.p8hc8pdp'
            }).addTo(map);

            var redMarker = L.ExtraMarkers.icon({
                icon: 'fa-bicycle',
                markerColor: 'red',
                shape: 'square',
                prefix: 'fa'
            });
            var orangeMarker = L.ExtraMarkers.icon({
                icon: 'fa-bicycle',
                markerColor: 'orange',
                shape: 'square',
                prefix: 'fa'
            });
            var greenMarker = L.ExtraMarkers.icon({
                icon: 'fa-bicycle',
                markerColor: 'green',
                shape: 'square',
                prefix: 'fa'
            });
            var greyMarker = L.ExtraMarkers.icon({
                icon: 'fa-minus-square',
                markerColor: 'red',
                shape: 'square',
                prefix: 'fa'
            });


            var url = "/home/fillmap";
            var stations = [];
            $.ajax({
                "url": url,
                "type": "POST",
                "data": "",
                "dataType": "json",
                "success": function(data) {
                    for (var i = 0; i < data.length; i++) {
                        stations.push(data[i]);
                        var lat = data[i].Latitude;
                        var long = data[i].Longitude;
                        var porc = parseInt(data[i].FreeBikes) / parseInt(data[i].BikeNum);
                        var availSlots = parseInt(data[i].BikeNum) - (parseInt(data[i].FreeBikes) + parseInt(data[i].ReservedSlots));
                        var markertext = "<b class=\"text-center  center-block\">" + data[i].StationName + "</b><hr>" +
                            "<b>Bicicletas disponibles: </b>" + data[i].FreeBikes + "<br>" +
                            "<b>Anclajes disponibles: </b>" + availSlots + "<br>" +
                            "<b>Metro: </b>" + data[i].Metro + "<br>" +
                            "<b>Bus: </b>" + data[i].Bus + "<br>";
                        var marker;
                        if (porc > 0.75) {
                            marker = L.marker([lat, long], { icon: greenMarker });
                        } else if (porc < 0.25) {
                            marker = L.marker([lat, long], { icon: redMarker });
                        }else if (porc <= 0) {
                            marker = L.marker([lat, long], { icon: greyMarker });
                        } else  {
                            marker = L.marker([lat, long], { icon: orangeMarker });
                        }
                        marker.bindPopup(markertext);
                        marker.addTo(map);
                    }
                },
                "error": function() {
                    console.log("Error calling " + url);
                }
            });

            //L.marker([51.5, -0.09]).addTo(map)
            //	.bindPopup("<b>Hello world!</b><br />I am a popup.").openPopup();

            //L.circle([51.508, -0.11], 500, {
            //	color: 'red',
            //	fillColor: '#f03',
            //	fillOpacity: 0.5
            //}).addTo(map).bindPopup("I am a circle.");

            //L.polygon([
            //	[51.509, -0.08],
            //	[51.503, -0.06],
            //	[51.51, -0.047]
            //]).addTo(map).bindPopup("I am a polygon.");


            var popup = L.popup();

            //function onMapClick(e) {
            //    popup
            //        .setLatLng(e.latlng)
            //        .setContent("You clicked the map at " + e.latlng.toString())
            //        .openOn(map);
            //}

            //map.on('click', onMapClick);
        });

    </script>

}

