@using Bicimad.Enums
@using Bicimad.Resources
@using Bicimad.Web.Areas.Admin.Models
@model Bicimad.Web.Areas.Admin.Models.AdminStationModel

@{
    ViewBag.Title = "Admin";
    var i = 0;
}

<div class="row" style="margin: 15px 0;">
    <div class="col-md-2">
        <h3 style="margin: 0;">@Model.TotalCount Estaciones</h3>
    </div>

    <div class="col-md-10">
        @using (Html.BeginForm(MVC.Admin.Stations.SetBasePrice(), FormMethod.Get, new {@class = "form-inline"}))
        {
            <div class="form-group">
                @Html.LabelFor(m => m.BasePrice)
                @Html.TextBoxFor(m => m.BasePrice, new {@style = "width: 30px; text-align: center;"}) €
            </div>

            <div class="form-group">
                <input type="submit" class="btn btn-default" value="Guardar"/>
            </div>
        }
    </div>
</div>

@using (Html.BeginForm(MVC.Admin.Stations.SetDiscounts(), FormMethod.Post))
{

    <div class="form-group" id="j-form"></div>

    <table class="table table-responsive table-condensed">

        <tr>
            <th>@Html.LabelFor(m => m.DiscountType)</th>
            <th>@Html.LabelFor(m => m.DiscConst)</th>
            <th>@Html.LabelFor(m => m.DiscPorc)</th>
            <th colspan="2"></th>
        </tr>

        <tr>
            <td>@Html.DropDownListFor(m => m.DiscountType, Model.DiscountTypes, new{@class = "j-dropdown"})</td>
            <td>@Html.TextBoxFor(m =>m.DiscConst, new {@style = "width: 50px; text-align: center;", @id = "Constant"})</td>
            <td>@Html.TextBoxFor(m =>m.DiscPorc, new {@style = "width: 50px; text-align: center;", @id = "Porcentual"})</td>
            <td>
                <input type="submit" class="btn btn-default j-button" value="Guardar"/>
            </td>
        </tr>

    </table>
}

<a class="btn btn-primary j-button" style="margin-bottom: 1em; margin-left: 2em;" id="selectAll">@Resources.SelectAll</a>


@if (Model.Stations != null && Model.Stations.Any())
{
    <table class="table table-striped table-responsive">
        <tr>
            <th></th>
            <th>Name</th>
            <th>Discount Type</th>
            <th>% Discount</th>
            <th>Money Discount</th>
        </tr>
        @foreach (var station in Model.Stations)
        {
            <tr>
                <td>
                    <div>
                        <label>
                            <input type="checkbox" value="" data-id = @i data-station-id="@station.Id" class="j-check">
                        </label>
                    </div>
                </td>
                <td>
                    @station.StationName
                </td>

                <td>
                    @station.DiscType.ToString()
                </td>

                <td>
                    @station.DiscPorc %
                </td>

                <td>
                    @station.DiscConst €
                </td>

            </tr>
            i++;
        }


    </table>

@section scripts
{
    @* TODO: CUANDO EL SCRIPT ESTE ACABADO METERLO EN UN SCRIPT APARTE y add locate *@
    <script>
        $(function () {

            $("#Porcentual").attr("disabled", "disabled");

            function hiddenValues(e) {
                var i = $(e).attr("data-id");
                var id = $(e).attr("data-station-id");
                var parent = document.getElementById("j-form");
                var check = e.checked;
                if (check) {
                    var input = document.createElement("input");
                    input.setAttribute("type", "hidden");
                    input.setAttribute("name", "stationIds");
                    input.setAttribute("value", id);
                    input.setAttribute("id", i);
                    parent.appendChild(input);
                } else {
                    document.getElementById(i).remove();
                }
            }

            $(".j-check").change(function () {
                hiddenValues(this);
            });


            $(".j-dropdown").change(function() {
                var value = $(".j-dropdown option:not(:selected)");
                var v = value[0].value;
                var m_value = this.value;
                var mTextArea = document.getElementById(m_value);
                var textarea = document.getElementById(v);
                $(textarea).attr("disabled", "disabled");
                $(mTextArea).removeAttr("disabled");
            });
            

            function selectAll(e) {
                var checkboxes = document.getElementsByClassName("j-check");
                for (var i = 0; i < checkboxes.length; i++) {
                    var checkbox = checkboxes[i];
                    checkbox.checked = true;
                    hiddenValues(checkbox);
                }
                e.id = "deselectAll";
            }

            function deselectAll(e){
                var checkboxes = document.getElementsByClassName("j-check");
                for (var i = 0; i < checkboxes.length; i++) {
                    var checkbox = checkboxes[i];
                    checkbox.checked = false;
                    hiddenValues(checkbox);
                }
                e.id = "selectAll";
            }

            $("#selectAll").click(function() {
                if (this.id == "selectAll")
                    selectAll(this);
                else
                    deselectAll(this);
            });
        })

    </script>
}}